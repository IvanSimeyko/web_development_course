Он-лайн редакторы:jsfiddle.net, liveweave.com, codepen.io, jsdo.it

Элемент состоит из открывающегося и закрывающегося тега. Есть элементы, которые не имеют закрывающегося тега. Напр.:
<br> - разрыв строки и перенос на следующую
<hr> - разделение линией блока текста

Артибут - необходим чтобы сохранять дополнительную информацию в элементе.

Пробелы на отображение html-страницы не влияют, но их нужно применять чтобы код был читабельнее.

Заголовки и форматирвоание текта.
<b></b> или <strong></strong> - жирный текст
<i></i> или <em> - курсив
<small></small>
 
<pre></pre> - создать параграф, в котором будут учтены все пробелы (текст надо писать в самом начале документа)

<blockquote></blockquonte> - для цитат
<mark></mark> - подсветка текста (дефолт - желтый)

Для определений ипользуется тег 
<dl>
    <dt></dt>
    <dd></dd>
</dl>

<abbr title = 'some text'></abbr> - расшифровка абривиатур

Переход по якорю:
<a href = '#paragr'></a> - перейдет к тегу с id = parag

CSS
CSS - не язык программирования, а таблицы стилей, т.е. определяет как будет отображаться и где размещаться HTML код.

Синтаксис: H1 (селектор) {color (свойство): green; (значение)}

Варианты пдклчения CSS: 1)Inline стили (атрибут <style>);
2)сохранение css коду в теге <style>, который розмещается в <hesd>.
3) Подключение .css в <head> с помощью тега <link>
4) @import 

Селектор позволяет обратится к одному или группе html-элементов. Существуют следующие селекторы:
-id - должен быть уникалным на одной странице. Обращание к элементу с id:
#name_id{
    color: red;
}

-class - может быть множество элементов на странице. Обращение к элементам с class:
.name_class{
    color: pink;
}

-tag - попадают все элементы данного тега на странице.Обращение:
p{
    color: green;
}
Следует помнить, что обращение по тегу менее важно, чем обращение по классу или по id. Т.е., при прочих равных, будут применены стили по классу или по айди.

-атрибут - обращение к тегу с конкретным атрибутом. Обращение:
input[type="text"]{
    background-colour: yellow;
}

-* - этот селектор обращается сразу до всех элементов на странице. пример:
*{
    font-size: 30px;
}    - всем элементам, в которых есть текст, присвоется размер текста равный 30 px

-псевдо-элементы - когда мы обращаемся к псевдо-элементу, то стиль применяется только для какой-то части этого элемента. Пример:
p::first-letter{
    color: grey;   (серый цвет применится к первой букве каждого параграфа)
}

-псевдо-классы - когда нужно обратиться к конкретному элементу (например к первому элементу) на странице. Синтаксис:
p:first-child{
    font-weight: bold; (жирный шрифт)
}


Важность селекторов:
'!important' - перекрывает все стили
inline-style (те которые в атрибуте style тега)
id
class/ pseudo class/ attribute
tag
дефолтные стили браузера



